{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfadbproject"
		},
		"AzureBlobStorageIN_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageIN'"
		},
		"AzureBlobStorageOUT_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageOUT'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ID']"
										},
										"sink": {
											"name": "ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['Order_id']"
										},
										"sink": {
											"name": "Order_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Order_Date']"
										},
										"sink": {
											"name": "Order_Date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Ship _Date']"
										},
										"sink": {
											"name": "Ship _Date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Ship_Mode']"
										},
										"sink": {
											"name": "Ship_Mode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Customer_id']"
										},
										"sink": {
											"name": "Customer_id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Customer_Name']"
										},
										"sink": {
											"name": "Customer_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Segment']"
										},
										"sink": {
											"name": "Segment",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Country']"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['City']"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['State']"
										},
										"sink": {
											"name": "State",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Postal_Code']"
										},
										"sink": {
											"name": "Postal_Code",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['Region']"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Product_ ID']"
										},
										"sink": {
											"name": "Product_ ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Category']"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sub_Category']"
										},
										"sink": {
											"name": "Sub_Category",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Product_Name']"
										},
										"sink": {
											"name": "Product_Name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Sales']"
										},
										"sink": {
											"name": "Sales",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Quantity']"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['Discount']"
										},
										"sink": {
											"name": "Discount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['Profit']"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									}
								],
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-10-20T05:11:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageOUT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "target"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageOUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageIN",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "superstore.json",
						"container": "row"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageIN')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageIN_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageOUT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageOUT_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}